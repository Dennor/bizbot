name: profile
description: Description of profile
version: 0.0.2
classes:
  profile_data:
    - name: nationalId
      type: string
      filter_index: true
    - name: user
      type: reference
      target: user
      filter_index: true
    - name: lastLoginAt
      type: datetime
    - name: updatedAt
      type: datetime
    - name: fullName
      type: string
    - name: birthDate
      type: datetime
    - name: address
      type: string
    - name: postNumber
      type: string
    - name: city
      type: string
    - name: municipality
      type: string
    - name: country
      type: string
    - name: isActive
      type: boolean
    - name: isVerified
      type: boolean
    - name: nationality
      type: string
    - name: avatar
      type: string
    - name: linkedinLink
      type: string
    - name: facebookLink
      type: string
  email_aliases:
    - name: user
      type: reference
      target: user
      filter_index: true
    - name: email
      type: string
    - name: companyOrgNumber
      type: string
    - name: companyName
      type: string
  user_tokens:
    - name: user
      type: reference
      target: user
    - name: token
      type: integer
      filter_index: true
endpoints:
  signicat-url:
    file: signicat.js
    description: 'Login by email and nation ID, register if not exists.'
    parameters:
      email:
        type: string
        description: User's email
        example: user@example.com
        required: true
        constraints:
          - email
      method:
        type: string
        description: Signicat method to use. Valid values are nbid and nbid-mobile
        example: nbid
      lang:
        type: string
        description: Signicat interface language. Valid values are 'en' and 'no'
        example: en
      eventCb:
        type: string
        description: Name of callback function to be used after login
      eventData:
        type: object
        description: Event data to be used after login.
        example: {}
    response:
      mimetype: application/json
      examples:
        - exit_code: 200
          example: |
            {
              "url": "https://preprod.signicat.com/std/method/demo?id=nbid%3ADEMO%3Aen&target=https%3A%2F%2Fapi.bizbot.no%2Fv1%2Fprofile%2Flogin%2F%3Femail%3D1%25401.ru%26eventCb%3Dredirect.root%26eventData%3D%257B%257D"
            }
        - exit_code: 400
          example: |
            {
              "detail": {
                "validationErrors": [
                  {"error": "email", "message": "Must be a valid email"}
                ]
              }
            }
        - exit_code: 500
          example: |
            {
              "detail": "Unexpected server error (500)"
            }
  login:
    file: login.js
    description: 'Login by email and national ID, register if not exist.'
    parameters:
      email:
        type: string
        description: login email
        required: true
        constraints:
          - email
      SAMLResponse:
        type: string
        description: b64 encoded samlresponse
        required: true
      eventCb:
        type: string
        description: Callback function to pass next
      eventData:
        type: object
        description: Event data
    response:
      mimetype: text/plain
      examples:
        - exit_code: 301
          example: >
            HEADERS

            Location:<instance_base_url>/auth?token=<token>&eventCb=redirect.root&eventData={}
  fetch-profile:
    file: fetch_profile.js
    description: Fetch user profile
    parameters:
      apiToken:
        type: string
        description: 'User token from login, can be also set with authorization header'
    response:
      mimetype: application/json
      examples:
        - exit_code: 200
          example: |
            {
              "hello": "world"
            }
  create-user:
    file: create_user.js
    description: Create new user
    public: false
    parameters:
      email:
        type: string
        description: user email
        required: true
        constraints:
          - email
      nationalId:
        type: string
        description: social
        required: true
        constraints:
          - equalLength:
              arg: 11
          - pattern:
              arg: '^[0-9]*$'
  update-profile:
    file: update_profile.js
    description: update user profile
    parameters:
      apiToken:
        type: string
        description: 'User token from login, can be also set with authorization header'
      email:
        type: string
        description: update user email
        constraints:
          - email
      fullName:
        type: string
        description: full name
      birthDate:
        type: datetime
        description: Change the time you were born at
      address:
        type: string
        description: address
      postNumber:
        type: string
        description: Post number
      city:
        type: string
        description: City
      municipality:
        type: string
        description: Municipality
      country:
        type: string
        description: Country
      nationality:
        type: string
        description: Nationality
      avatar:
        type: string
        description: avatar link
      linkedinLink:
        type: string
        description: Link to linkedin profile
      facebookLink:
        type: string
        description: Link to facebook profile
    response:
      mimetype: application/json
      examples:
        - exit_code: 200
          example: |
            {
              "id": 6,
              "emailAliases": [
                {
                  "email": "loki@gmail.com",
                  "companyOrgNumber": "983718590",
                  "companyName": "SA BYGG AS"
                }
              ],
              "lastLogin": null,
              "createdAt": "2017-10-30T11:20:25.915810Z",
              "updatedAt": "2017-11-21T13:39:16.237728Z",
              "email": "example@gmail.com",
              "nationalId": "05098946154",
              "fullName": "Example Torvaldson",
              "birthDate": "1989-09-05",
              "address": "13, Borgatta",
              "postNumber": "0271",
              "city": "Oslo",
              "municipality": "Oslo",
              "country": "Norway",
              "isActive": true,
              "isVerified": false,
              "nationality": "",
              "avatar": null,
              "linkedinLink": "https://ru.linkedin.com/company/example",
              "facebookLink": "https://www.facebook.com/example/"
            }
        - exit_code: 403
          example: |
            {
              "message": "Forbidden"
            }
